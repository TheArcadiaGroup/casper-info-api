version: '3.3'
services:
  traefik:
    image: traefik:v2.3
    container_name: traefik
    restart: unless-stopped
    networks: 
      - casper-info
    command:
    - "--api=true"
    - "--log.level=DEBUG"
    - "--api.insecure=true"
    - "--providers.docker=true"
    - "--providers.docker.exposedbydefault=false"
    - "--entrypoints.web.address=:80"
    - "--entrypoints.websecure.address=:443"
    - "--entrypoints.redis.address=:6379"
    - "--entrypoints.mongodb.address=:27017"
    - "--entrypoints.web.http.redirections.entrypoint.to=websecure"
    - "--entrypoints.web.http.redirections.entrypoint.scheme=https"
    - "--entrypoints.web.http.redirections.entrypoint.permanent=true"
    - "--certificatesresolvers.myresolver.acme.tlschallenge=true"
    # - "--certificatesresolvers.myresolver.acme.caserver=https://acme-staging-v02.api.letsencrypt.org/directory"
    - "--certificatesresolvers.myresolver.acme.email=cleophasbarwareng@ids.company"
    - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
    - "80:80"
    - "443:443"
    - "8080:8080"
    volumes:
    - "./letsencrypt:/letsencrypt"
    - "/var/run/docker.sock:/var/run/docker.sock:ro"
    labels:
    - "traefik.enable=true"
    - "traefik.http.services.traefik.loadbalancer.server.port=8080"
    - "traefik.http.routers.traefik.rule=Host(`traefik.cspr.fyi`)"
    - "traefik.http.routers.traefik.entrypoints=websecure"
    - "traefik.http.routers.traefik.tls=true"
    - "traefik.http.routers.traefik.tls.certresolver=myresolver"
  #REDIS 
  redis:
    container_name: redis
    image: redis
    ports:
      - 6379:6379
    restart: unless-stopped
    networks:
      - casper-info
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.services.redis.loadbalancer.server.port=6379"
      - "traefik.tcp.routers.redis.entrypoints=redis"
      - "traefik.tcp.routers.redis.rule=HostSNI(`redis.cspr.fyi`)"
      - "traefik.tcp.routers.redis.service=redis"
  # MONGODB
  mongodb:
    image: mongo:6.0.1
    container_name: mongodb
    restart: unless-stopped
    ports:
      - 27017:27017
    env_file:
      - ./.env
    volumes:
      - mongodbdata:/data/db
    networks:
      - casper-info
      - traefik
    labels:
      - "traefik.enable=true"
      - "traefik.tcp.services.mongodb.loadbalancer.server.port=27017"
      - "traefik.tcp.router.mongodb.entrypoints=mongodb"
      - "traefik.tcp.router.mongodb.rule=HostSNI(`mongo.cspr.fyi`)"
      - "traefik.tcp.router.mongodb.service=mongodb"
  # Main Server
  main-server:
    container_name: main-server
    build: .
    ports:
      - 5001:5001
    env_file:
      - ./.env
    environment:
      - PORT=5001
      - INDEXER=false
      - NODE_ENV=prod
    restart: unless-stopped
    depends_on:
      - redis
      - mongodb
      - traefik
    networks:
      - casper-info
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.main-server.rule=Host(`api.cspr.fyi`)"
      - "traefik.http.services.main-server.loadbalancer.server.port=5001"
      - "traefik.http.routers.main-server.entrypoints=websecure"
      - "traefik.http.routers.main-server.tls=true"
      - "traefik.http.routers.main-server.tls.certresolver=myresolver"
  block-queuer:
    container_name: block-queuer
    build: .
    ports:
      - 6001:6001
    env_file:
      - ./.env
    environment:
      - PORT=6001
      - INDEXER=true
      # - START_BLOCK=1070000
      # - END_BLOCK=1100000
      - NODE_ENV=prod
    restart: unless-stopped
    depends_on:
      - redis
      - mongodb
    networks:
      - casper-info
  block-query:
    container_name: block-query
    build: .
    ports:
      - 6002:6002
    env_file:
      - ./.env
    environment:
      - PORT=6002
      - INDEXER=true
      - NODE_ENV=prod
      # - START_BLOCK=999999
      # - END_BLOCK=950000
      - WORKER_TYPE=BLOCK_QUERY
    restart: unless-stopped
    depends_on:
      - redis
      - mongodb
    networks:
      - casper-info
  block-save:
    container_name: block-save
    build: .
    ports:
      - 6003:6003
    env_file:
      - ./.env
    environment:
      - PORT=6003
      - INDEXER=true
      - NODE_ENV=prod
      - WORKER_TYPE=BLOCK_SAVE
    restart: unless-stopped
    depends_on:
      - redis
      - mongodb
    networks:
      - casper-info
  deploy-query:
    container_name: deploy-query
    build: .
    ports:
      - 6004:6004
    env_file:
      - ./.env
    environment:
      - PORT=6004
      - INDEXER=true
      - NODE_ENV=prod
      - WORKER_TYPE=DEPLOY_QUERY
    restart: unless-stopped
    depends_on:
      - redis
      - mongodb
    networks:
      - casper-info
  era-summary-query:
    container_name: era-summary-query
    build: .
    ports:
      - 6005:6005
    env_file:
      - ./.env
    environment:
      - PORT=6005
      - INDEXER=true
      - NODE_ENV=prod
      - WORKER_TYPE=ERA_SUMMARY_AND_PERFORMANCE_CALCULATION
    restart: unless-stopped
    depends_on:
      - redis
      - mongodb
    networks:
      - casper-info
  account-update:
    container_name: account-update
    build: .
    ports:
      - 6006:6006
    env_file:
      - ./.env
    environment:
      - PORT=6006
      - INDEXER=true
      - NODE_ENV=prod
      - WORKER_TYPE=ACCOUNT_UPDATE
    restart: unless-stopped
    depends_on:
      - redis
      - mongodb
    networks:
      - casper-info
networks:
  casper-info:
volumes:
  mongodbdata:
    
  